#!/bin/bash
#
# internal-functions
#
# Used by bash-my-aws functions to work with stdin and arguments.


skim-stdin() {

  # Append first token from each non-comment line of STDIN to argument list
  #
  # Implementation of `pipe-skimming` pattern that skips comment lines.
  #
  #     $ stacks | skim-stdin foo bar
  #     foo bar huginn mastodon grafana
  #
  #     $ stacks
  #     # STACK_NAME  STATUS           CREATION_TIME             LAST_UPDATED    NESTED
  #     huginn       CREATE_COMPLETE  2020-01-11T06:18:46.905Z  NEVER_UPDATED  NOT_NESTED
  #     mastodon     CREATE_COMPLETE  2020-01-11T06:19:31.958Z  NEVER_UPDATED  NOT_NESTED
  #     grafana      CREATE_COMPLETE  2020-01-11T06:19:47.001Z  NEVER_UPDATED  NOT_NESTED
  #
  # Typical usage within Bash-my-AWS functions:
  #
  #     local asg_names=$(skim-stdin "$@") # Append to arg list
  #     local asg_names=$(skim-stdin)      # Only draw from STDIN
  #
  # Enhanced to skip lines beginning with # (comment lines)

  local skimmed_stdin="$([[ -t 0 ]] || awk '
    /^#/ { next }      # Skip comment lines
    { print $1 }       # Extract first field
  ' ORS=" ")"

  printf -- '%s %s' "$*" "$skimmed_stdin" |
    awk '{$1=$1;print}'  # trim leading/trailing spaces

}

columnise() {
  if [[ $BMA_COLUMNISE_ONLY_WHEN_TERMINAL_PRESENT == 'true' ]] && ! [[ -t 1 ]]; then
    cat
  else
    column -t -s $'\t'
  fi
}

__bma-using-aws-cli-v1() {
  aws --version | grep 'aws-cli/1' &>/dev/null
}


__bma_read_filters() {

  # Construct a string to be passed to `grep -E`
  #
  #     $ __bma_read_filters foo bar baz
  #     foo|bar|baz

  ( IFS=$'|'; printf -- "$*" )
}


__bma_error() {
  echo "ERROR: $@" > /dev/stderr
  return 1
}


__bma_usage() {
  echo "USAGE: ${FUNCNAME[1]} $@" > /dev/stderr
}


__bma_output_header() {
  # Output a header comment line based on BMA_HEADERS environment variable
  #
  # Controls when headers are displayed:
  #   - always (default): Headers in all output
  #   - auto: Headers in terminal, none in pipes
  #   - never: No headers anywhere
  #
  # Usage:
  #   __bma_output_header "INSTANCE_ID	AMI_ID	TYPE	STATE	NAME"
  
  local header="$1"
  local headers_mode="${BMA_HEADERS:-always}"
  
  case "$headers_mode" in
    never)
      # Don't output headers
      ;;
    always)
      # Always output headers
      printf "# %s\n" "$header"
      ;;
    auto|*)
      # Output headers only when output is to a terminal
      if [[ -t 1 ]]; then
        printf "# %s\n" "$header"
      fi
      ;;
  esac
}


#
# The following two functions are deprecated
#


__bma_read_inputs() {
  # deprecated
  echo $(__bma_read_stdin) $@ |
    sed -E 's/\ +$//'         |
    sed -E 's/^\ +//'
}


__bma_read_stdin() {
  # deprecated - use skim-stdin
  [[ -t 0 ]] ||
    cat                  |
      awk '{ print $1 }' |
      tr '\n' ' '        |
      sed 's/\ $//'
}

